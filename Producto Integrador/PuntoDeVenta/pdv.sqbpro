<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="pdv.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="0"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1500"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="compras" custom_title="0" dock_id="1" table="4,7:maincompras"/><dock_state state="000000ff00000000fd00000001000000020000000000000000fc0100000001fb000000160064006f0063006b00420072006f00770073006500310100000000ffffffff0000011e00ffffff000000000000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings/></tab_browse><tab_sql><sql name="SQL 1">-- Tabla de usuarios
CREATE TABLE IF NOT EXISTS usuarios (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    username TEXT UNIQUE NOT NULL,
    password TEXT NOT NULL,
    nombre TEXT NOT NULL,
    rol TEXT NOT NULL -- 'admin' o 'cajero'
);

-- Tabla de turnos
CREATE TABLE IF NOT EXISTS turnos (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    usuario_id INTEGER NOT NULL,
    fecha_apertura TEXT NOT NULL,
    fecha_cierre TEXT,
    efectivo_inicial REAL NOT NULL,
    efectivo_final REAL,
    FOREIGN KEY (usuario_id) REFERENCES usuarios(id)
);

-- Tabla de productos
CREATE TABLE IF NOT EXISTS productos (
    codigo TEXT PRIMARY KEY,
    nombre TEXT NOT NULL,
    precio REAL NOT NULL,
    cantidad INTEGER NOT NULL DEFAULT 0
);

-- Tabla de facturas
CREATE TABLE IF NOT EXISTS facturas (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    fecha TEXT NOT NULL,
    total REAL NOT NULL
);

-- Tabla detalle_factura (factura-producto)
CREATE TABLE IF NOT EXISTS factura_productos (
    id_factura INTEGER,
    codigo_producto TEXT,
    cantidad INTEGER,
    FOREIGN KEY(id_factura) REFERENCES facturas(id),
    FOREIGN KEY(codigo_producto) REFERENCES productos(codigo)
);

-- Tabla de compras
CREATE TABLE IF NOT EXISTS compras (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    producto TEXT NOT NULL,
    cantidad INTEGER NOT NULL,
    precio_unitario REAL NOT NULL,
    distribuidor TEXT NOT NULL,
    fecha TEXT NOT NULL
);


-- Insertar usuario admin
INSERT INTO usuarios (username, password, nombre, rol) VALUES ('admin', '1234', 'Administrador', 'admin');

-- Insertar algunos productos de ejemplo
INSERT INTO productos (codigo, nombre, precio, cantidad) VALUES
('P001', 'Manzana', 1.5, 100),
('P002', 'Leche', 2.0, 50),
('P003', 'Pan', 1.2, 200),
('P004', 'Jugo', 2.5, 80),
('P005', 'Galleta', 0.75, 150);

-- Insertar un distribuidor por defecto
INSERT INTO compras (producto, cantidad, precio_unitario, distribuidor, fecha)
VALUES ('Producto de prueba', 1, 0.0, 'Distribuidor Principal', datetime('now'));</sql><current_tab id="0"/></tab_sql></sqlb_project>
